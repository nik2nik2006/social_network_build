{"version":3,"file":"static/js/660.3661e1b4.chunk.js","mappings":"wLACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCYhL,EATmB,SAACA,GAChB,IAAIC,EAAK,YAAcD,EAAME,GAC/B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOC,UACrBJ,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAIR,EAAKM,SAAEP,EAAMU,QAGpC,ECHA,EAJiB,SAACV,GACd,OAAOG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEM,QAAQJ,SAAEP,EAAMW,SAC7C,E,gDCAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAexBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAbZ,SAACf,GACpB,OACIiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAaZ,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,OAAAI,UACIJ,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GAAUZ,KAAM,iBAAkBa,YAAY,qBACzDC,SAAU,CAACC,EAAAA,EAAUb,QAEhCT,EAAAA,EAAAA,KAAA,OAAAI,UACIJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,aAIxB,ICYA,EAxBgB,SAACP,GACb,IAAI0B,EAAQ1B,EAAM2B,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACtB,KAAMqB,EAAErB,KAAiBR,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,GAAe,IACzF+B,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAC,OAAIhC,EAAAA,EAAAA,KAACiC,EAAO,CAACzB,QAASwB,EAAExB,QAAoBT,GAAIiC,EAAEjC,IAAZiC,EAAEjC,GAAe,IAMlG,OAAKF,EAAMqC,QAGPpB,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAEwB,QAAQtB,SAAA,EACtBJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEiC,aAAa/B,SAC1BqB,KAELzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE6B,SAAS3B,UACvBJ,EAAAA,EAAAA,KAAA,OAAAI,SAAM0B,OAEV9B,EAAAA,EAAAA,KAACW,EAAmB,CAACI,SAdT,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOE,eAC7B,QAE0BtC,EAAAA,EAAAA,KAACuC,EAAAA,GAAQ,CAACjC,GAAG,SAASkC,SAAS,GAa7D,E,oBCNA,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAE3B,IAEyB,SAACmB,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,GAASC,EAAAA,EAAAA,GAAmBN,GAChC,EAER,IAIIO,EAAAA,EAFJ,CAGEC,E","sources":["webpack://react-kabzda-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__k3xDK\",\"dialogsItems\":\"Dialogs_dialogsItems__szQjE\",\"active\":\"Dialogs_active__JiO+P\",\"messages\":\"Dialogs_messages__zIGR2\",\"message\":\"Dialogs_message__FwqZs\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path='/dialogs/' + props.id\r\n  return (\r\n      <div className={s.dialog}>\r\n          <NavLink to={path}>{props.name}</NavLink>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\nconst Message  = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;\r\n","import {maxLengthCreator, required} from \"../../../utils/validators/validadors\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageBody\"} placeholder=\"Enter your message\"\r\n                       validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {AddMessageFormRedux} from \"./AddMessageForm/AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} id={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\" replace={true}/>;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {\r\n    sendMessageCreator,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["props","path","id","_jsx","className","s","dialog","children","NavLink","to","name","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","isAuth","dialogsItems","values","sendMessage","newMessageBody","Navigate","replace","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}