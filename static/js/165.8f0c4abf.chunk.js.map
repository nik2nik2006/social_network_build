{"version":3,"file":"static/js/165.8f0c4abf.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withNavigate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__kyyhk\",\"profile\":\"Profile_profile__k0m7G\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__f5I0Q\",\"image\":\"ProfileInfo_image__HgpNh\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateMode}>{props.status || \"No status\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/img/user_img.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    <img src={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n                         alt='типа рисунок' className={s.image}/>\r\n                </div>\r\n                <div>\r\n                    {profile.fullName}\r\n                    {profile.lookingForAJobDescription}\r\n                    {profile.contacts.facebook}\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__9Oo9P\",\"posts\":\"MyPosts_posts__svhte\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__LMlP+\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://www.1zoom.ru/big2/40/175542-Sepik.jpg'/>\r\n            post 1 - {props.message}\r\n            <div>\r\n                <span>\r\n                    like - {props.likeCount}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validadors\";\r\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Enter your text\"} name={\"newPostText\"} component={Textarea}\r\n                       validate={[required, maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: 'ProfileAddPostForm',\r\n    // fields: ['firstName', 'lastName', 'email'] // all the fields in your form\r\n})(AddPostForm);\r\n\r\nwindow.props = [];\r\n\r\nfunction MyPosts(props) {\r\n    console.log(\"RENDER YO\");\r\n\r\n    let postsElements = props.posts.map(\r\n        p => <Post message={p.message} likeCount={p.likeCount}/>);\r\n\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n                <AddPostReduxForm onSubmit={addNewPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={s.profile}>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport withRouter from './withRouter';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {withNavigate} from \"../../hoc/withNavigate\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        autorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withNavigate,\r\n    withAuthRedirect\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport const withNavigate = (Component) => {\r\n    let RedirectTo =(props) => {\r\n        return < Component {...props} navigate={useNavigate() } />\r\n    }\r\n    return RedirectTo;\r\n}\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","_ref","profile","className","s","src","photos","large","userPhoto","alt","fullName","lookingForAJobDescription","contacts","facebook","ProfileStatusWithHooks","Preloader","message","likeCount","maxLength10","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","window","console","log","postsElements","posts","map","p","Post","formData","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","ProfileContainer","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","params","autorizedUserId","getProfile","getStatus","Profile","_objectSpread","React","compose","auth","isAuth","withRouter","Component","navigate","useNavigate","withAuthRedirect"],"sourceRoot":""}